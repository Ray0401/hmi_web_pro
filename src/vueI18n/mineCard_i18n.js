/*
 * @Author: 徐海瑞
 * @Date: 2022-12-26 10:22:22
 * @Last Modified by: 杨震乾
 * @Last Modified time: 2023-01-06 13:35:42
 */

export default {
  delayTime: 'mineCard.delayTime',
  delayReason: 'mineCard.delayReason',
  AlarmSettings: 'mineCard.AlarmSettings',
  faultReason: 'mineCard.faultReason',
  LaneDeparture: 'mineCard.LaneDeparture',
  ready: 'states.ready',
  delay: 'states.delay',
  fault: 'states.fault',
  spare: 'states.spare',
  unknown: 'states.unknown',
  unloadingStatus: 'mineCard.unloadingStatus',
  emptyLoading: 'mineCard.emptyLoading',
  fullLoadUnloading: 'mineCard.fullLoadUnloading',
  exceptionHandling: 'mineCard.exceptionHandling',
  emptyUnloading: 'mineCard.emptyUnloading',
  halfLoadUnloading: 'mineCard.halfLoadUnloading',
  test: 'mineCard.test',
  staticTest: 'mineCard.staticTest',
  dynamicsTest: 'mineCard.dynamicsTest',
  jobOperation: 'mineCard.jobOperation',
  collectionPath: 'mineCard.collectionPath',
  uploadLog: 'mineCard.uploadLog',
  statusSetting: 'mineCard.statusSetting',
  readyToApply: 'mineCard.readyToApply',
  delayToApply: 'mineCard.delayToApply',
  faultToApply: 'mineCard.faultToApply',
  check: 'mineCard.check',
  changeShifts: 'mineCard.changeShifts',
  workMeal: 'mineCard.workMeal',
  DodgeCannon: 'mineCard.DodgeCannon',
  other: 'mineCard.other',
  minute: 'mineCard.minute',
  auto: 'mineCard.auto',
  manual: 'mineCard.manual',
  control: 'mineCard.control',
  startStaticTest: 'mineCard.startStaticTest',
  startDynamicTest: 'mineCard.startDynamicTest',
  startDailyLog: 'mineCard.startDailyLog',
  startReadiness: 'mineCard.startReadiness',
  motorFault: 'mineCard.motorFault',
  brakeFault: 'mineCard.brakeFault',
  engineFault: 'mineCard.engineFault',
  otherFault: 'mineCard.otherFault',
  switchTo: 'mineCard.switchTo',
  parkingReason: 'mineCard.parkingReason',
  workFlow: 'mineCard.workFlow',
  faultInfo: 'mineCard.faultInfo',
  detectOffInfo: 'mineCard.detectOffInfo',
  deleteFault: 'mineCard.deleteFault',
  deleteFile: 'mineCard.deleteFile',
  uploadFile: 'mineCard.uploadFile',
  reloadPage: 'mineCard.reloadPage',
  rearMineCard: 'mineCard.rearMineCard',
  retrograde: 'mineCard.retrograde',
  surrounding: 'mineCard.surrounding',
  departure: 'mineCard.departure',
  intersection: 'mineCard.intersection',
  wayEnd: 'mineCard.wayEnd',
  exitAcquisition: 'mineCard.exitAcquisition',
  minute15: 'mineCard.minute15',
  minute30: 'mineCard.minute30',
  minute60: 'mineCard.minute60',
  uploadCollectFile: 'mineCard.uploadCollectFile',
};
